# Screenshot Capture Lambda Container with Playwright
# Use Microsoft's official Playwright Python image with all dependencies
FROM mcr.microsoft.com/playwright/python:v1.44.0-jammy

# Install additional system dependencies for Lambda
RUN apt-get update && \
    apt-get install -y \
        g++ \
        make \
        cmake \
        unzip \
        libcurl4-openssl-dev \
        ca-certificates && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up Lambda function directory first
ENV LAMBDA_TASK_ROOT=/var/task
RUN mkdir -p ${LAMBDA_TASK_ROOT}

# Install AWS Lambda Runtime Interface Client
RUN pip3 install --upgrade pip && \
    pip3 install awslambdaric

# Install Python dependencies in Lambda task directory
# This ensures Playwright is installed where Lambda can find it
WORKDIR ${LAMBDA_TASK_ROOT}
RUN pip3 install --target ${LAMBDA_TASK_ROOT} \
        'playwright>=1.44.0' \
        'fastapi>=0.111.0' \
        'pydantic>=2.8.2' \
        'uvicorn>=0.30.0' \
        'python-dotenv>=1.0.1' \
        'boto3>=1.34.0' \
        'mangum>=0.17.0' \
        'httpx>=0.27.0' \
        'requests>=2.31.0' \
        'ulid-py>=1.1.0' \
        'python-jose[cryptography]>=3.3.0' \
        'cryptography>=41.0.0' \
        'Pillow>=10.0.0' \
        'reportlab>=4.0.0'

# Install Playwright browsers in the Lambda function directory
# This ensures browser binaries are accessible to the Lambda function
ENV PLAYWRIGHT_BROWSERS_PATH=${LAMBDA_TASK_ROOT}/ms-playwright
RUN python3 -m playwright install chromium

# Set Lambda-optimized environment variables
ENV HOME=/tmp
ENV PYTHONPATH=${LAMBDA_TASK_ROOT}
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0

# Copy application code
COPY app/ ${LAMBDA_TASK_ROOT}/app/

# Set working directory
WORKDIR ${LAMBDA_TASK_ROOT}

# Test Playwright installation
RUN python3 -c "from playwright.async_api import async_playwright; print('Playwright import successful')"

# Set the Lambda runtime directly without wrapper script
ENTRYPOINT ["/usr/bin/python3", "-m", "awslambdaric"]
CMD ["app.lambda_handler.eventbridge_handler"]