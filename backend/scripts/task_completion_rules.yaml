# TASK.md Auto-Completion Detection Rules
# This file defines how to detect when specific acceptance criteria are met

rules:
  # Infrastructure Tasks
  "Configure S3 Buckets with Object Lock":
    file_checks:
      - file: "infra/s3_artifacts.tf"
        criteria:
          "S3 bucket `csa-artifacts-{env}` created with Object Lock in Compliance mode":
            - contains: "object_lock_enabled = true"
            - contains: 'mode = "COMPLIANCE"'
          "Default retention period set to 7 years":
            - contains: "days = 2557"
          "Versioning enabled on bucket":
            - contains: 'status = "Enabled"'
            - contains: "versioning"
          "SSE-KMS encryption configured with CMK":
            - contains: 'sse_algorithm     = "aws:kms"'
          "CloudTrail data events enabled for bucket":
            - file: "infra/cloudtrail.tf"
            - contains: "data_resource"
            - contains: "s3"

  "Set up KMS Keys":
    file_checks:
      - file: "infra/kms.tf"
        criteria:
          "CMK created for S3 encryption":
            - contains: "aws_kms_key"
            - contains: "artifacts"
          "Automatic rotation enabled":
            - contains: "enable_key_rotation = true"
          "Key policies implement least privilege":
            - contains: "policy"
            - not_contains: '"Resource": "*"'

  "Configure DynamoDB Tables":
    file_checks:
      - file: "infra/dynamodb.tf"
        criteria:
          "Schedules table created with correct schema":
            - contains: "aws_dynamodb_table"
            - contains: "schedules"
          "Captures table created with correct schema":
            - contains: "aws_dynamodb_table"
            - contains: "captures"
          "GSIs configured for query patterns":
            - contains: "global_secondary_index"
          "Encryption at rest enabled with KMS":
            - contains: "server_side_encryption"

  # Lambda Implementation Tasks
  "Implement CaptureLambda":
    file_checks:
      - file: "app/capture_engine/engine.py"
        criteria:
          "Container image with Playwright + Chromium built":
            - contains_any: ["playwright", "chromium", "browser"]
          "SHA-256 hash computation implemented":
            - contains_any: ["hashlib.sha256", "sha256"]
          "S3 upload with metadata working":
            - contains: "s3"
            - contains_any: ["upload", "put_object"]
          "DynamoDB capture record creation":
            - contains_any: ["dynamodb", "capture"]
            - contains: "record"
          "Error handling and retry logic":
            - contains_any: ["try:", "except:", "retry"]
          "IAM role with minimal permissions":
            - file: "infra/iam.tf"
            - contains: "capture_lambda"

  "Implement API Lambda Functions":
    file_checks:
      - file: "app/api/routes/schedules.py"
        criteria:
          "POST /api/schedules creates schedule with all fields":
            - contains: "POST"
            - contains: "schedules"
          "GET /api/schedules returns user's schedules":
            - contains: "GET"
            - contains: "schedules"
      - file: "app/api/routes/captures.py"
        criteria:
          "POST /api/captures/trigger works with rate limiting":
            - contains: "trigger"
            - contains: "POST"
          "GET /api/captures supports all filter parameters":
            - contains: "GET"
            - contains: "captures"

  # Security Tasks
  "Configure CloudTrail Logging":
    file_checks:
      - file: "infra/cloudtrail.tf"
        criteria:
          "Trail created for all API calls":
            - contains: "aws_cloudtrail"
          "S3 data events enabled for artifacts bucket":
            - contains: "data_resource"
            - contains: "s3"
          "Logs written to Object Lock protected bucket":
            - contains: "s3_bucket_name"
          "Log integrity validation enabled":
            - contains: "enable_log_file_validation = true"

  "Implement Secrets Management":
    command_checks:
      - name: "No hardcoded secrets"
        command: ["uv", "run", "ruff", "check", "--select", "S105,S106,S107", "app/"]
        success_criteria: "return_code == 0"
    file_checks:
      - file: "app/**/*.py"
        criteria:
          "Lambda functions retrieve secrets at runtime":
            - contains: "secretsmanager"
            - contains: "get_secret_value"
          "No hardcoded credentials in code":
            - not_contains_any: ["password =", "api_key =", "secret ="]

  # Testing Tasks
  "Write Integration Tests":
    file_checks:
      - file: "tests/**/*test*.py"
        criteria:
          "End-to-end capture flow tested":
            - contains: "test_capture"
          "API authentication tested":
            - contains: "test_auth"
          "Hash verification tested":
            - contains: "test_hash"
    command_checks:
      - name: "Test coverage > 80%"
        command: ["uv", "run", "pytest", "--cov=app", "--cov-report=term"]
        success_criteria: "coverage >= 80"

  # Monitoring Tasks
  "Set up CloudWatch Dashboards":
    file_checks:
      - file: "infra/cloudwatch.tf"
        criteria:
          "Dashboard shows capture success/failure rates":
            - contains: "aws_cloudwatch_dashboard"
          "Lambda execution metrics displayed":
            - contains: "AWS/Lambda"
          "Cost tracking dashboard created":
            - contains: "cost"

# Completion Detection Logic
detection_logic:
  # How to determine if a task is fully complete
  task_completion:
    all_criteria_checked: true
    status_updates:
      - "PENDING -> IN_PROGRESS": "any criteria checked"
      - "IN_PROGRESS -> COMPLETED": "all criteria checked"
    
  # Auto-commit settings
  auto_commit:
    enabled: true
    message_template: |
      auto: update TASK.md with completed criteria
      
      ğŸ¤– Auto-generated based on detected completions:
      {completed_tasks}
      
      ğŸ“‹ Checked off {criteria_count} acceptance criteria
    
  # Validation rules
  validation:
    require_pr_reference: true
    require_completion_date: true
    prevent_status_regression: true